name: PyMathSDK-CI

on:
  push:
    branches: [ "feature/*", "bugfix/*", "experiment/*" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      WORKING_DIR: ./PyMathSDK
    defaults:
      run:
        working-directory: ${{env.WORKING_DIR}}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Install Versionize
        if: github.event_name == 'pull_request'
        run: dotnet tool install --global Versionize

      - name: Setup git
        if: github.event_name == 'pull_request' && github.base_ref == 'develop'
        run: |
          git config --local user.email "mduduzi.mlilo@hotmail.com"
          git config --local user.name "Mduduzi Mlilo"

      - name: Versionize Development Release
        if: github.event_name == 'pull_request' && github.base_ref == 'develop'
        id: versionize_development
        run: versionize --changelog-all --exit-insignificant-commits --pre-release
        continue-on-error: true
        
      - name: Versionize Main Release
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        id: versionize_main
        run: versionize --changelog-all --exit-insignificant-commits
        continue-on-error: true

      - name: No release required
        if: steps.versionize_main.outcome != 'success' && steps.versionize_development.outcome != 'success'
        run: echo "Skipping Release. No release required."

      - name: Push changes to GitHub
        if: steps.versionize_main.outcome == 'success' || steps.versionize_development.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.WORKFLOW_ACTIONS_TOKEN }}
          branch: ${{ github.base_ref }}
          tags: true

      - name: "Create release"
        if: steps.versionize_main.outcome == 'success' || steps.versionize_development.outcome == 'success'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.WORKFLOW_ACTIONS_TOKEN }}
          script: |
            try {
              const tags_url = context.payload.repository.tags_url + "?per_page=1"
              const result = await github.request(tags_url)
              const current_tag = result.data[0].name
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: current_tag,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: current_tag,
              });
            } catch (error) {
              core.setFailed(error.message);
            }

      - name: Test
        run: dotnet test --no-build --verbosity normal